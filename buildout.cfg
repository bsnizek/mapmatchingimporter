[buildout]
index = http://download.zope.org/ppix
hooks-directory = ${buildout:directory}/hooks
parts = 
	curl
    python
 	libpng
 	libgif
 	libjpeg
 	libtiff
 	freetype
 	libgd
	proj
    geos
 	postgresql
    postgis
#    psycopg2
    gdal
    gdal-config
#    test
    interpreter

python = custom-python

#develop =
#	src/sl.mapmatchingimporter
	
versions = versions

[versions]
#numpy = 1.6.0

[sourceforge]
mirror = downloads.sourceforge.net

[curl]
recipe = hexagonit.recipe.cmmi
url = http://curl.haxx.se/download/curl-7.21.7.tar.gz

[python]
recipe = hexagonit.recipe.cmmi
url = http://www.python.org/ftp/python/2.7.2/Python-2.7.2.tgz
configure-options =
    --with-threads
    --with-readline

[libpng]
recipe = hexagonit.recipe.cmmi
# md5sum = bd08a55e319022a7cdc6e3882d6b9497
url = http://${sourceforge:mirror}/libpng/libpng15/1.5.4/libpng-1.5.4.tar.gz

[libgif]
recipe = hexagonit.recipe.cmmi
url = http://${sourceforge:mirror}/project/giflib/giflib%204.x/giflib-4.1.6/giflib-4.1.6.tar.bz2

[libjpeg]
recipe = hexagonit.recipe.cmmi
url = http://www.ijg.org/files/jpegsrc.v8c.tar.gz
make-targets =
    install
#    install-lib
pre-make-hook = ${buildout:hooks-directory}/libjpeg.py:pre_make

[libtiff]
recipe = hexagonit.recipe.cmmi
# url = http://download.osgeo.org/libtiff/tiff-3.9.4.zip
path=${buildout:directory}/lib/tiff-3.9.5

[freetype]
recipe = hexagonit.recipe.cmmi
url = http://download.savannah.gnu.org/releases/freetype/freetype-2.1.10.tar.gz

[libgd]
recipe = hexagonit.recipe.cmmi
# url = http://www.chipsnbytes.net/downloads/gd-2.0.35.tar.gz
url = http://www.boutell.com/gd/http/gd-2.0.28.tar.gz
# md5sum = 982963448dc36f20cb79b6e9ba6fdede
configure-options =
    --with-x
    --with-jpeg=${libjpeg:location}
    --with-png=${libpng:location}
    --with-gif=${libgif:location}
    --with-tiff=${libtiff:location}
    --with-freetype=${freetype:location}
    --without-fontconfig
    CFLAGS="-I${libpng:location}/include -I${libgif:location}/include -I${libtiff:location}/include -I${libjpeg:location}/include"
    LDFLAGS="-L${libpng:location}/lib -L${libgif:location}/lib -L${libtiff:location}/lib -L${libjpeg:location}/lib"

[postgresql]
recipe = hexagonit.recipe.cmmi
url = http://wwwmaster.postgresql.org/redir/412/h/source/v9.1.0/postgresql-9.1.0.tar.gz

[proj]
recipe = hexagonit.recipe.cmmi
url = http://download.osgeo.org/proj/proj-4.7.0.tar.gz

[geos]
recipe = hexagonit.recipe.cmmi
url = http://download.osgeo.org/geos/geos-3.2.2.tar.bz2


[postgis]
recipe = hexagonit.recipe.cmmi
url = http://postgis.refractions.net/download/postgis-1.5.3.tar.gz
configure-options =
    --with-pgconfig=${postgresql:location}/bin/pg_config
	--with-geosconfig=${geos:location}/bin/geos-config
	--with-projdir=${proj:location}
pre-make-hook = ${buildout:hooks-directory}/postgis.py:pre_make

[psycopg2]
recipe = zc.recipe.egg:custom
egg = psycopg2
find-links = http://www.gispython.org/downloads/misc/psycopg2-2.0.6.tar.gz
define = PSYCOPG_EXTENSIONS,PSYCOPG_DISPLAY_SIZE,PSYCOPG_NEW_BOOLEAN,HAVE_PQFREEMEM,HAVE_PQPROTOCOL3
include-dirs = ${postgresql:location}/include
library-dirs = ${postgresql:location}/lib
rpath = ${postgresql:location}/lib

[custom-python]
executable = ${python:location}/bin/python

[gdal]
recipe = hexagonit.recipe.cmmi
url = http://download.osgeo.org/gdal/gdal-1.8.1.tar.gz
configure-options =
    --with-python=${python:location}/bin/python
    --with-threads
    --with-ogr
    --with-geos=${geos:location}/bin/geos-config
    --with-proj=${proj:location}
    --with-pg=${postgresql:location}/bin/pg_config
    --with-png=${libpng:location}
    --with-jpeg=${libjpeg:location}
    --with-gif=${libgif:location}
    --with-tiff=${libtiff:location}
    --with-curl=${curl:location}/bin/curl-config
    PYTHON=${custom-python:executable}
make-targets =
    install
    install-lib
post-make-hook = ${buildout:hooks-directory}/gdal.py:post_make

[gdal-config]
recipe = bopen.recipe.libinc
flags-command =
    ${gdal:location}/bin/gdal-config --libs
    ${gdal:location}/bin/gdal-config --cflags
    

[interpreter]
recipe = zc.recipe.egg
eggs =
#	psycopg2
	elementtree
    zope.interface
interpreter = python


# [test]
# recipe = zc.recipe.testrunner
# eggs = 
# 	${interpreter:eggs}
# defaults = [ '--auto-color', '-v']
