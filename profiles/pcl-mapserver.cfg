[buildout]
extends =
    pcl-gdal.cfg
index = http://download.zope.org/ppix
parts = 
    python
    psycopg2
    postgis
    gdal
    mapserver
    PCL-Core
    PCL-GDAL
    PCL-MapServer
    worldborders
    interpreter
    test-pcl-mapserver
python = custom-python
develop =
    src/OWSLib

[interpreter]
recipe = zc.recipe.egg
eggs =
    PCL-Core
    PCL-GDAL
    PCL-MapServer
    OWSLib
    psycopg2
    elementtree
    zope.interface
interpreter = python

[PCL-MapServer]
recipe = zc.recipe.egg:develop
setup = ${buildout:directory}/src/PCL/PCL-MapServer/setup.py
include-dirs =
    ${geos:location}/include
    ${libgd:location}/include
    ${mapserver:compile-directory}
    ${buildout:directory}/src/PCL/PCL-MapServer/cartography/engine/mapserver
library-dirs =
    ${geos:location}/lib
rpath =
    ${curl:location}/lib
    ${geos:location}/lib
    ${proj:location}/lib
    ${libgd:location}/lib

swig = ${swig:location}/bin/swig
swig-opts = -python -modern -keyword

[test-pcl-mapserver]
recipe = zc.recipe.testrunner
eggs =
    PCL-MapServer
    elementtree
defaults = ['--auto-color', '-v']
script = test
initialization =
    open('${buildout:directory}/src/PCL/PCL-MapServer/fixtures/diskstore.ovf', 'w').write(open('${buildout:directory}/src/PCL/PCL-MapServer/fixtures/diskstore.ovf.template').read() % dict(world_borders='${worldborders:destination}/world_borders.shp'))
